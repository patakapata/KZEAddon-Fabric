plugins {
    id 'fabric-loom' version '0.11-SNAPSHOT'
    id 'maven-publish'
}
java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

archivesBaseName = project.archives_base_name
version = "mc" + project.minecraft_version + "-" + project.mod_version
group = project.maven_group

repositories {
    maven {
        name = "TerraformersMC"
        url = "https://maven.terraformersmc.com/releases/"
    }
    maven {
        name = "Shedaniel"
        url = "https://maven.shedaniel.me/"
    }
    maven {
        name = "Modrinth"
        url = "https://api.modrinth.com/maven"
        content {
            includeGroup "maven.modrinth"
        }
    }
    maven {
        url = "https://repo.essential.gg/repository/maven-public"
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"

    modImplementation "maven.modrinth:modmenu:${project.modmenu_version}"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    modImplementation(include("gg.essential:vigilance-${project.vigilance_mcversion}-${project.vigilance_mcplatform}:${project.vigilance_version}"))
}

compileJava.dependsOn clean

processResources {
    inputs.property "version", project.version

    from(sourceSets.main.resources.srcDirs) {
        expand "version": project.version
    }
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
// task sourcesJar(type: Jar, dependsOn: classes) {
//     //noinspection GrDeprecatedAPIUsage
//     classifier = "sources"
//     from sourceSets.main.allSource
// }

jar {
    from "LICENSE"
}

// configure the maven publication
publishing {
    publications {
        //noinspection GroovyAssignabilityCheck
        mavenJava(MavenPublication) {
            // add all the jars that should be included when publishing to maven
            //noinspection GroovyAssignabilityCheck
            artifact(remapJar) {
                //noinspection GroovyAssignabilityCheck
                builtBy remapJar
            }
            //noinspection GroovyAssignabilityCheck
            // artifact(sourcesJar) {
                //noinspection GroovyAssignabilityCheck
                // builtBy remapSourcesJar
            // }
        }
    }

    // select the repositories you want to publish to
    repositories {
        // uncomment to publish to the local maven
        // mavenLocal()
    }
}

javadoc {
    options.charSet = 'UTF-8'
    options.encoding = 'UTF-8'
}
